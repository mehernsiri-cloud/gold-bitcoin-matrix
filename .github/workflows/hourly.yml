name: Hourly Predictions & ROI Update
import os
import json
on:
  schedule:
    - cron: '0 * * * *'  # every hour at minute 0
  workflow_dispatch:      # allows manual trigger

jobs:
  hourly-predictions:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          persist-credentials: false  # Use PAT explicitly for push

      # 2. Setup Python
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      # 3. Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pandas yfinance requests pyyaml plotly textblob pytrends scikit-learn beautifulsoup4

      # 4. Ensure data folder & CSV/JSON files exist
      - name: Create data folder and CSV/JSON files if missing
        run: |
          mkdir -p data
          touch data/actual_data.csv
          touch data/predictions_log.csv
          touch data/ai_predictions_log.csv
          touch data/roi_data.json

      # 5. Update market indicators dynamically
      - name: Update market indicators
        run: python update_weights.py || echo "⚠️ update_weights.py failed, continuing"

      # 6. Fetch actual data
      - name: Fetch actual data
        run: python fetch_data.py || echo "⚠️ fetch_data.py failed, continuing"

      # 7. Generate predictions
      - name: Run headless prediction script
        run: python predict_headless.py || echo "⚠️ predict_headless.py failed, continuing"

      # 8. Generate AI predictions and backtest
      - name: Generate AI predictions & backtest
        run: python run_ai_predictions.py || echo "⚠️ run_ai_predictions.py failed, continuing"

      # 9. Update ROI data from Dubai property listings
      - name: Update ROI data
        run: |
          # Backup previous ROI data
          cp data/roi_data.json data/roi_data_backup.json || echo "⚠️ No previous ROI backup found"
          
          # Run scraper
          python update_roi_data.py || echo "⚠️ update_roi_data.py failed, keeping previous ROI data"
          
          # Restore backup if new ROI is empty
          python - <<'EOF'

roi_path = 'data/roi_data.json'
backup_path = 'data/roi_data_backup.json'

try:
    with open(roi_path, 'r', encoding='utf-8') as f:
        data = json.load(f)
    if not data:
        raise ValueError("ROI data is empty")
except Exception:
    print("⚠️ ROI data empty, restoring previous backup")
    if os.path.exists(backup_path):
        os.replace(backup_path, roi_path)
EOF

      # 10. Commit & push CSV/JSON updates
      - name: Commit & push CSV/JSON updates
        env:
          GH_PAT: ${{ secrets.GH_PAT }}
        run: |
          git config --local user.email "actions@github.com"
          git config --local user.name "GitHub Actions"

          git add data/predictions_log.csv data/actual_data.csv data/ai_predictions_log.csv data/roi_data.json weight.yaml
          git commit -m "Hourly update with ROI refresh" || echo "No changes to commit"

          # Pull with "theirs" strategy to prefer workflow changes in conflicts
          git pull --rebase -X theirs https://x-access-token:${GH_PAT}@github.com/${{ github.repository }} HEAD || true

          git push https://x-access-token:${GH_PAT}@github.com/${{ github.repository }} HEAD:main

